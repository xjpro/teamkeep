<div id="team-header">
    
    <div id="team-banner" class="container" data-bind="style: { backgroundImage: BannerBackgroundImage }">
        <a data-bind="attr: { href: Url }"><h1 data-bind="text: Name"></h1></a>
        <!-- ko if: Editable -->
        <div class="hover-edit" data-toggle="modal" data-target="#team-banner-modal">
            <i class="icon-pencil"></i> Edit banner image
        </div>
        <div id="team-functions" class="btn-group">
            <!-- ko if: EnableMessageButton -->
            <a class="btn btn-info" data-toggle="tab" href="#compose" onclick="javascript:location.hash='compose';">Message team</a>
            <!-- /ko -->
            <!-- ko ifnot: EnableMessageButton -->
            <button class="btn btn-info disabled" title="Will become available once you've added a team member email to your roster">Message team</button>
            <!-- /ko -->
            <a class="btn btn-info" data-toggle="tab" href="#settings" onclick="javascript:location.hash='settings';"><i class="icon-cog"></i></a>
        </div>
        <!-- /ko -->

        <form id="team-banner-modal" class="modal hide fade" data-bind="submit: SaveBanner">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3>Edit banner</h3>
            </div>
            <div class="modal-body">
                <div class="alert alert-error hide">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    <span></span>
                </div>
                <p>
                    Please resize images so as to not exceed 2MB in size. 
                    For best results banner images should be wide, short images (height around 200 pixels).
                </p>
                <p>
                    <input id="banner-file" type="file" style="display: none"/>
                    <div class="input-append">
                        <input id="banner-file-name" type="text"/>
                        <button class="btn btn-info" type="button" onclick="$('#banner-file').click();">Browse</button>
                    </div>
                </p>
            </div>
            <div class="modal-footer">
                <button class="btn" type="button" data-dismiss="modal" aria-hidden="true">Cancel</button>
                <button class="btn btn-success">
                    <i class="icon-refresh icon-spin" style="display: none"></i> Change banner image
                </button>
            </div>
        </form>

    </div>
    <ul id="team-nav" class="container">
        <li><a data-toggle="tab" href="#schedule" onclick="javascript:location.hash='schedule';">Schedule</a></li>
        @if (Model.Team.Editable || Model.Team.Privacy.Roster)
        {
        <li><a data-toggle="tab" href="#roster" onclick="javascript:location.hash='roster';">Roster</a></li>
        }
        @if (Model.Team.Editable)
        {
            <li>
                <!-- ko if: AvailabilityVisible -->
                <a data-toggle="tab" href="#availability" onclick="javascript:location.hash='availability';">Availability</a>
                <!-- /ko -->
                <!-- ko ifnot: AvailabilityVisible -->
                <a class="disabled" title="Will become available once you've added a dated event to your schedule and at least one member to your roster">Availability</a>
                <!-- /ko -->
            </li>
            <li><a data-toggle="tab" href="#messages" onclick="javascript:location.hash='messages';">Messages</a></li>
        }
    </ul>

</div>
<script>
    
    var TeamLinksViewModel = function () {
        var me = this;

        this.AllEvents = ko.computed(function () {
            var games = [];
            _.each(teamViewModel.Seasons(), function (season) {
                _.each(season.Games(), function (game) {
                    games.push(game);
                });
            });
            return _.filter(games, function (game) { return game.DateTimeMoment() != null; });
        });
        this.AllPlayers = ko.computed(function () {
            var players = [];
            _.each(teamViewModel.PlayerGroups(), function (group) {
                _.each(group.Players(), function (player) {
                    players.push(player);
                });
            });
            return players;
        });

        // Tab toggle
        this.AvailabilityVisible = ko.computed(function () {
            return me.AllPlayers().length > 0 && me.AllEvents().length > 0;
        });
    };
    $(function () {
        window.teamLinksViewModel = new TeamLinksViewModel();
        ko.applyBindings(window.teamLinksViewModel, document.getElementById("team-nav"));
    });

    var TeamHeaderViewModel = function () {
        var me = this;

        // From shared storage
        this.Editable = teamViewModel.Editable;
        this.Privacy = teamViewModel.Privacy;
        this.PlayerGroups = teamViewModel.PlayerGroups;
        this.Id = teamViewModel.Id;
        this.Url = teamViewModel.Url;
        this.Name = teamViewModel.Name;
        this.BannerImage = teamViewModel.BannerImage;

        this.BannerBackgroundImage = ko.computed(function () {
            return (me.BannerImage() != null) ? "url('/TeamBanners/" + me.BannerImage() + "')" : "url('/img/defaultbanner.jpg')";
        });

        this.EnableMessageButton = ko.computed(function () {
            var somePlayersHaveEmail = false;
            _.each(me.PlayerGroups(), function (group) {
                if (group.PlayersWithEmail().length > 0) {
                    somePlayersHaveEmail = true;
                    return false;
                }
                return true;
            });
            return somePlayersHaveEmail;
        });

        this.SaveBanner = function () {

            if ($("#banner-file").val().length === 0) {
                return window.ShowAlert("Please select a valid image file");
            }

            $("#team-banner-modal .icon-refresh").show();
            $("#team-banner-modal button").prop("disabled", true);

            var file = document.getElementById("banner-file").files[0];

            // http://holyhoehle.wordpress.com/2010/09/19/uploading-files-using-ajax/
            $.ajax({
                type: "PUT", url: me.Url() + "/banner",
                processData: false,
                data: file,
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("Cache-Control", "no-cache");
                    xhr.setRequestHeader("X-File-Name", file.name);
                    xhr.setRequestHeader("Content-Type", "multipart/form-data");
                },
                success: function () {
                    window.location.reload();
                },
                error: function (response) {
                    window.ShowAlert(JSON.parse(response.responseText));
                    $("#team-banner-modal .icon-refresh").hide();
                    $("#team-banner-modal button").prop("disabled", false);
                }
            });
            return true;
        };
    };

    $(function () {
        window.teamHeaderViewModel = new TeamHeaderViewModel();
        ko.applyBindings(window.teamHeaderViewModel, document.getElementById("team-banner"));

        $("#banner-file").change(function () { // Little hack to make pretty file upload input
            $("#banner-file-name").val($(this).val());
        });
        
        $("#team-banner").hover( // Show edit button when banner is hovered
            function () { $("#team-banner .hover-edit").show(); },
            function () { $("#team-banner .hover-edit").hide(); });
        
        // Initial nav
        if (location.hash.length > 0) {
            $("#team-header a[href='" + location.hash + "']").click();
        }
        else {
            $("#team-nav li a:first").click();
        }

        $("#team-functions a").bind("click", function() {
            $("#team-nav .active").removeClass("active");
        });
    });
</script>
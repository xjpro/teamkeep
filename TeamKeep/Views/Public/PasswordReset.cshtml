@{
    Layout = "~/Views/Shared/Master.cshtml";
    ViewBag.Title = "Password Reset";
    ViewBag.Description = "Reset your your password";
}

<div id="reset" class="container main">
    <div class="row">
        <form class="span6" data-bind="submit: Reset">
            <h1>Reset your password</h1>
            <div id="reset-alert" class="alert alert-error hide">
            </div>
            <p>
                <label>E-mail</label>
                <input type="text" data-bind="value: Email"/>

                <label>New password</label>
                <input type="password" placeholder="Your new password" data-bind="value: NewPassword"/>
            </p>
            <p>
                <button class="btn btn-success">
                    <i class="icon-refresh icon-spin"></i> Reset password
                </button>
            </p>
        </form>
    </div>
</div>
<script>
    var ResetViewModel = function (data) {
        var me = this;
        ko.mapping.fromJS(data, {}, me);

        this.NewPassword = ko.observable("");
        this.Reset = function () {
            $("button").prop("disabled", true);
            $("button .icon-spin").show();
            $("#reset-alert").hide();
            $.ajax({
                type: "PUT", url: "/users/password",
                data: JSON.stringify({
                    Email: me.Email(),
                    ResetToken: me.ResetToken(),
                    Password: me.NewPassword()
                }),
                contentType: "application/json",
                success: function (response) {
                    TeamKeep.signIn(response.AuthToken, response.Redirect);
                },
                error: function (response) {
                    $("#reset-alert").html(JSON.parse(response.responseText)).show();
                    $("button").prop("disabled", false);
                    $("button .icon-spin").hide();
                }
            });
        };
    };

    var email = location.search.match(/email=([^&]*)/i);
    var resetHash = location.search.match(/token=([^&]*)/i);

    var resetViewData = {
        Email: (email) ? email[1] : "",
        ResetToken: (resetHash) ? resetHash[1] : ""
    };

    window.viewModel = ko.mapping.fromJS(resetViewData, ko.mapping.toViewModel(ResetViewModel));
    ko.applyBindings(window.viewModel, document.getElementById("reset"));
</script>